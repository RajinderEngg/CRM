//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Configuration;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.6.1055.0.
// 


namespace AmaxService.ThirdPartyApi
{

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "SendSMSSoap", Namespace = "http://goldman.co.il/")]
    public partial class SendSMS : System.Web.Services.Protocols.SoapHttpClientProtocol
    {

        private System.Threading.SendOrPostCallback SUBMITSMSOperationCompleted;

        private System.Threading.SendOrPostCallback COMMANDSOperationCompleted;

        /// <remarks/>
        public SendSMS()
        {
            this.Url = ConfigurationManager.AppSettings["sms2youServiceUrl"] != null? ConfigurationManager.AppSettings["sms2youServiceUrl"] : "http://www.goldmansystems.com/GSMS/GSMS_WebAPI/SendSMS.asmx";

        }

        /// <remarks/>
        public event SUBMITSMSCompletedEventHandler SUBMITSMSCompleted;

        /// <remarks/>
        public event COMMANDSCompletedEventHandler COMMANDSCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://goldman.co.il/SUBMITSMS", RequestNamespace = "http://goldman.co.il/", ResponseNamespace = "http://goldman.co.il/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SUBMITSMS(string XMLString)
        {
            object[] results = this.Invoke("SUBMITSMS", new object[] {
                    XMLString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginSUBMITSMS(string XMLString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("SUBMITSMS", new object[] {
                    XMLString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndSUBMITSMS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void SUBMITSMSAsync(string XMLString)
        {
            this.SUBMITSMSAsync(XMLString, null);
        }

        /// <remarks/>
        public void SUBMITSMSAsync(string XMLString, object userState)
        {
            if ((this.SUBMITSMSOperationCompleted == null))
            {
                this.SUBMITSMSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSUBMITSMSOperationCompleted);
            }
            this.InvokeAsync("SUBMITSMS", new object[] {
                    XMLString}, this.SUBMITSMSOperationCompleted, userState);
        }

        private void OnSUBMITSMSOperationCompleted(object arg)
        {
            if ((this.SUBMITSMSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SUBMITSMSCompleted(this, new SUBMITSMSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://goldman.co.il/COMMANDS", RequestNamespace = "http://goldman.co.il/", ResponseNamespace = "http://goldman.co.il/", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string COMMANDS(string XMLString)
        {
            object[] results = this.Invoke("COMMANDS", new object[] {
                    XMLString});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginCOMMANDS(string XMLString, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("COMMANDS", new object[] {
                    XMLString}, callback, asyncState);
        }

        /// <remarks/>
        public string EndCOMMANDS(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void COMMANDSAsync(string XMLString)
        {
            this.COMMANDSAsync(XMLString, null);
        }

        /// <remarks/>
        public void COMMANDSAsync(string XMLString, object userState)
        {
            if ((this.COMMANDSOperationCompleted == null))
            {
                this.COMMANDSOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCOMMANDSOperationCompleted);
            }
            this.InvokeAsync("COMMANDS", new object[] {
                    XMLString}, this.COMMANDSOperationCompleted, userState);
        }

        private void OnCOMMANDSOperationCompleted(object arg)
        {
            if ((this.COMMANDSCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.COMMANDSCompleted(this, new COMMANDSCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void SUBMITSMSCompletedEventHandler(object sender, SUBMITSMSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SUBMITSMSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal SUBMITSMSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    public delegate void COMMANDSCompletedEventHandler(object sender, COMMANDSCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class COMMANDSCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal COMMANDSCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}