//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AmaxService.PdfClient {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="PdfClient.PrintPdfReceiptSoap")]
    public interface PrintPdfReceiptSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PrintPdf", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PrintPdf(string HtmlNo, string id, string orgname, string con);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PrintPdf", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PrintPdfAsync(string HtmlNo, string id, string orgname, string con);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsFileExists", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string IsFileExists(string orgname, string ofilename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IsFileExists", ReplyAction="*")]
        System.Threading.Tasks.Task<string> IsFileExistsAsync(string orgname, string ofilename);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string HelloWorld();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/HelloWorld", ReplyAction="*")]
        System.Threading.Tasks.Task<string> HelloWorldAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface PrintPdfReceiptSoapChannel : AmaxService.PdfClient.PrintPdfReceiptSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class PrintPdfReceiptSoapClient : System.ServiceModel.ClientBase<AmaxService.PdfClient.PrintPdfReceiptSoap>, AmaxService.PdfClient.PrintPdfReceiptSoap {
        
        public PrintPdfReceiptSoapClient() {
        }
        
        public PrintPdfReceiptSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public PrintPdfReceiptSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintPdfReceiptSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public PrintPdfReceiptSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string PrintPdf(string HtmlNo, string id, string orgname, string con) {
            return base.Channel.PrintPdf(HtmlNo, id, orgname, con);
        }
        
        public System.Threading.Tasks.Task<string> PrintPdfAsync(string HtmlNo, string id, string orgname, string con) {
            return base.Channel.PrintPdfAsync(HtmlNo, id, orgname, con);
        }
        
        public string IsFileExists(string orgname, string ofilename) {
            return base.Channel.IsFileExists(orgname, ofilename);
        }
        
        public System.Threading.Tasks.Task<string> IsFileExistsAsync(string orgname, string ofilename) {
            return base.Channel.IsFileExistsAsync(orgname, ofilename);
        }
        
        public string HelloWorld() {
            return base.Channel.HelloWorld();
        }
        
        public System.Threading.Tasks.Task<string> HelloWorldAsync() {
            return base.Channel.HelloWorldAsync();
        }
    }
}
